version: '2.4'

networks:
  peacetrue-microservice:
    external:
      name: peacetrue-microservice

services:
  peacetrue-microservice-config-center:
    container_name: peacetrue-microservice-config-center
    hostname: peacetrue-microservice-config-center
    image: registry.cn-beijing.aliyuncs.com/peacetrue/peacetrue-microservice-config-center:latest
    #restart: always
    privileged: true
    env_file:
      - .env.${ENV}
    volumes:
      - ./peacetrue-microservice-config-center/logs:/app/logs
      #- ${volumes_ssl}
      #- ${volumes_localtime}
      #- ${volumes_localtime}
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - peacetrue-microservice
    #entrypoint: java -jar app.jar ${JAR_ENV}
  peacetrue-microservice-registry-center:
    container_name: peacetrue-microservice-registry-center
    hostname: peacetrue-microservice-registry-center
    #build: peacetrue-microservice-registry-center
    image: registry.cn-beijing.aliyuncs.com/peacetrue/peacetrue-microservice-registry-center:latest
    #restart: always
    privileged: true
    env_file:
      - .env.${ENV}
    volumes:
      #      - ../peacetrue-microservice-registry-center/build/libs/peacetrue-microservice-registry-center-1.0.0-SNAPSHOT.jar:/app.jar
      - ./peacetrue-microservice-registry-center/logs:/app/logs
      #- ${volumes_ssl}
      #- ${volumes_localtime}
      #- ${volumes_localtime}
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - peacetrue-microservice
    #entrypoint: java -jar app.jar ${JAR_ENV}
    depends_on:
      peacetrue-microservice-config-center:
        condition: service_healthy
  peacetrue-microservice-admin-server:
    container_name: peacetrue-microservice-admin-server
    hostname: peacetrue-microservice-admin-server
    #    build: peacetrue-microservice-admin-server
    image: registry.cn-beijing.aliyuncs.com/peacetrue/peacetrue-microservice-admin-server:latest
    #restart: always
    privileged: true
    volumes:
      #      - ../peacetrue-microservice-admin-server/build/libs/peacetrue-microservice-admin-server-1.0.0-SNAPSHOT.jar:/app.jar
      - ./peacetrue-microservice-admin-server/logs:/app/logs
      #- ${volumes_ssl}
      #- ${volumes_localtime}
      #- ${volumes_localtime}
    #    expose:
    #      - 8500
    ports:
      - "8500:8500"
    env_file:
      - .env.${ENV}
    networks:
      - peacetrue-microservice
    #entrypoint: java -jar app.jar ${JAR_ENV}
    depends_on:
      peacetrue-microservice-registry-center:
        condition: service_healthy
  peacetrue-microservice-gateway:
    container_name: peacetrue-microservice-gateway
    hostname: peacetrue-microservice-gateway
    #    build: peacetrue-microservice-gateway
    image: registry.cn-beijing.aliyuncs.com/peacetrue/peacetrue-microservice-gateway:latest
    #restart: always
    privileged: true
    volumes:
      #      - ../peacetrue-microservice-gateway/build/libs/peacetrue-microservice-gateway-1.0.0-SNAPSHOT.jar:/app.jar
      - ./peacetrue-microservice-gateway/logs:/app/logs
      #- ${volumes_ssl}
      #- ${volumes_localtime}
      #- ${volumes_localtime}
    #    expose:
    #      - 80
    ports:
      - "80:80"
    env_file:
      - .env.${ENV}
    networks:
      - peacetrue-microservice
    #entrypoint: java -jar app.jar ${JAR_ENV}
    depends_on:
      peacetrue-microservice-registry-center:
        condition: service_healthy
  peacetrue-microservice-resource-server:
    container_name: peacetrue-microservice-resource-server
    hostname: peacetrue-microservice-resource-server
    #    build: peacetrue-microservice-resource-server
    image: registry.cn-beijing.aliyuncs.com/peacetrue/peacetrue-microservice-resource-server:latest
    #restart: always
    privileged: true
    volumes:
      #      - ../peacetrue-microservice-resource-server/build/libs/peacetrue-microservice-resource-server-1.0.0-SNAPSHOT.jar:/app.jar
      - ./peacetrue-microservice-resource-server/logs:/app/logs
      #- ${volumes_ssl}
      #- ${volumes_localtime}
      #- ${volumes_localtime}
    #    expose:
    #      - 8520
    ports:
      - "8520:8520"
    env_file:
      - .env.${ENV}
    networks:
      - peacetrue-microservice
    #entrypoint: java -jar app.jar ${JAR_ENV}
    depends_on:
      peacetrue-microservice-registry-center:
        condition: service_healthy
  peacetrue-microservice-client-inner:
    container_name: peacetrue-microservice-client-inner
    hostname: peacetrue-microservice-client-inner
    #    build: peacetrue-microservice-client-inner
    image: registry.cn-beijing.aliyuncs.com/peacetrue/peacetrue-microservice-client-inner:latest
    #restart: always
    privileged: true
    volumes:
      #      - ../peacetrue-microservice-client-inner/build/libs/peacetrue-microservice-client-inner-1.0.0-SNAPSHOT.jar:/app.jar
      - ./peacetrue-microservice-client-inner/logs:/app/logs
      #- ${volumes_ssl}
      #- ${volumes_localtime}
      #- ${volumes_localtime}
    #    expose:
    #      - 8530
    ports:
      - "8530:8530"
    env_file:
      - .env.${ENV}
    networks:
      - peacetrue-microservice
    #entrypoint: java -jar app.jar ${JAR_ENV}
    depends_on:
      peacetrue-microservice-registry-center:
        condition: service_healthy
  peacetrue-microservice-client-outer:
    container_name: peacetrue-microservice-client-outer
    hostname: peacetrue-microservice-client-outer
    #    build: peacetrue-microservice-client-outer
    image: registry.cn-beijing.aliyuncs.com/peacetrue/peacetrue-microservice-client-outer:latest
    #restart: always
    privileged: true
    volumes:
      #      - ../peacetrue-microservice-client-outer/build/libs/peacetrue-microservice-client-outer-1.0.0-SNAPSHOT.jar:/app.jar
      - ./peacetrue-microservice-client-outer/logs:/app/logs
      #- ${volumes_ssl}
      #- ${volumes_localtime}
      #- ${volumes_localtime}
    #    expose:
    #      - 8531
    ports:
      - "8531:8531"
    env_file:
      - .env.${ENV}
    networks:
      - peacetrue-microservice
    depends_on:
      peacetrue-microservice-registry-center:
        condition: service_healthy
    #entrypoint: java -jar app.jar ${JAR_ENV}

#本地 mac
# docker-compose --env-file=.env-file.mac
#生产
# docker-compose --env-file=.env-file.prod

# docker network create peacetrue-microservice
# docker-compose up -d
# docker-compose down
# docker-compose config
# docker-compose --env-file=.env-file.mac up -d peacetrue-microservice-config-center
# docker-compose --env-file=.env-file.prod up -d peacetrue-microservice-config-center
