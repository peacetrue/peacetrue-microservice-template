#授权服务配置（spring-security-oauth2 过期不完善的）
authorization-server:
  hostname: localhost
  port: 8510
  issuerUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}
  jwkSetUri: ${authorization-server.issuerUri}/.well-known/jwks.json

spring:
  application:
    name: peacetrue-microservice-client-outer
  security:
    oauth2:
      client:
        registration:
          peacetrue:
            provider: peacetrue
            client-id: peacetrue
            client-secret: password
            scope: message.read,message.write
            authorizationGrantType: client_credentials
        provider:
          peacetrue:
            issuerUri: ${authorization-server.issuerUri}
            jwkSetUri: ${authorization-server.jwkSetUri}
    user:
      name: ${MICROSERVICE_SECURITY_USERNAME:peacetrue}
      password: ${MICROSERVICE_SECURITY_PASSWORD:password}

server.port: 8531

gateway:
  hostname: localhost
  url: ${MICROSERVICE_PROTOCOL:http}://${gateway.hostname}

spring.profiles.include: uaa
management.endpoints.web.exposure.include: "*"

logging.level.org.springframework: debug
logging.level.com.github.peacetrue: debug

---

spring.profiles: prod
spring.profiles.include: https,log

gateway.hostname: peacetrue.cn
authorization-server.hostname: peacetrue.cn

logging.level.org.springframework: info
logging.level.com.github.peacetrue: info

---

spring.profiles: https

MICROSERVICE_PROTOCOL: https

server:
  ssl:
    #服务端
    key-store: file://${user.home}/peacetrue.cn.jks
    key-alias: peacetrue.cn
    key-store-password: ${MICROSERVICE_SSL_PASSWORD:password}

authorization-server.port: 8443

---

spring.profiles: log

logging.file.name: logs/root.log

---
#授权服务配置（UAA 完善的），默认使用 spring-security-oauth2，激活此配置使用 UAA
spring.profiles: uaa

authorization-server:
  port: 8080
  issuerUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}/uaa/oauth/token
  jwkSetUri: ${MICROSERVICE_PROTOCOL:http}://${authorization-server.hostname}:${authorization-server.port}/uaa/token_keys


---
#消息总线通过 rabbitmq 发送消息
spring.profiles: rabbitmq
spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

---
#通过 RabbitMQ 上传日志
spring.profiles: 'rabbitmq & rabbitmqLog & default'

#基于 java 命令执行路径
logging.config: file:peacetrue-microservice-common/logback-spring.xml

---
#通过 RabbitMQ 上传日志
spring.profiles: 'rabbitmq & rabbitmqLog'

#基于 java 命令执行路径
logging.config: file:../peacetrue-microservice-common/logback-spring.xml


