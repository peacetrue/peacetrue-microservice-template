buildscript {
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
//        maven { url 'https://plugins.gradle.org/m2/' }
//        maven { url 'https://repo.spring.io/plugins-release' }
    }

    dependencies {
        //自动使用最新版本
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.4.5"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.5.0"
    }
}

subprojects { project ->

    group "com.github.peacetrue.microservice"
    version "1.0.0-SNAPSHOT"
    description "微服务结构"

    apply plugin: "java-library"
    sourceCompatibility = 8
    targetCompatibility = 8

    sourceSets {
        main {
            resources {
                srcDirs "src/main/resources", "../peacetrue-microservice-common"
            }
        }
    }

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"
    apply plugin: "com.google.cloud.tools.jib"
    dependencyManagement {
        imports {
            mavenBom "com.github.peacetrue:peacetrue-dependencies:2.0.0-SNAPSHOT"
        }
        dependencies {
            dependency 'net.logstash.logback:logstash-logback-encoder:6.4'
            dependency 'de.codecentric:spring-boot-admin-starter-server:2.3.0'
            //dependency 'de.codecentric:spring-boot-admin-starter-client:2+'
        }
    }

    dependencies {

        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"
        implementation("com.google.code.findbugs:jsr305")

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testCompileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"
    }

    //junit 5 测试
    test {
        useJUnitPlatform()
    }

/*
    bootBuildImage {
//        builder = "openjdk/11.0.8-jre-slim"
        builder = "openjdk/openjdk:11.0.8-jre"
        imageName = "registry.cn-beijing.aliyuncs.com/peacetrue/$name:latest"
        runImage = "mine/java-cnb-run"
    }
*/

    jib {
        from {
            //使用本地镜像，依赖本地 docker
            image = "docker://openjdk:11.0.8-jre"
            //使用仓库镜像，速度慢
            //image = "registry://docker.io/library/openjdk:11.0.8-jre"
        }

        to {
            //上传到阿里云镜像仓库
            image = "registry.cn-beijing.aliyuncs.com/peacetrue/$name"
            //image = "registry-vpc.cn-beijing.aliyuncs.com/peacetrue/$name"
            tags = [/*version,*/ 'latest']
            auth {
                username = "18618262909"
                password = "1234560O"
            }
        }

        container {
            //环境变量 docker 启动时指定
            //environment = ['SPRING_PROFILES_ACTIVE': 'prod']
            jvmFlags = ['-Xmx256m', '-Xms128m', '-Xmn96m', '-Xss256k']
            //CMD [jib.container.args]
            //args = ['--spring.profiles.active=prod']
            creationTime = 'USE_CURRENT_TIMESTAMP'
        }

    }
}



